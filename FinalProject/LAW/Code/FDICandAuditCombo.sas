/* This SAS code pulls in the files generated by the DataCombo and Audit_Year_Call programs 
   and combines them into a file for further analysis.*/

/* DATA PREPARATION*/
/* Define path once */
libname mywork "C:\Users\lward\Documents\ECON - Data Science for Economists\ProjectDocs\CleanedData";

/* STEP 1: COMBINE AUDIT AND FDIC DATA */
proc sql;
    create table mywork.combined_data as
    select 
        a.rssd9017,
        a.audit_type,
        a.audit_normalized,
        a.assurance_level,
        a.assurance_basic,
        /* New indicator variables */
        case when a.assurance_basic = 'AUDIT' then 1 else 0 end as audit,
        case when a.assurance_level = 'Integrated' or a.assurance_level = 'Integrated_Audit' then 1 else 0 end as integrated,
        case when a.assurance_level = 'FS_Only' or a.assurance_level = 'FSOnly_Aud' then 1 else 0 end as fsonly,
        b.*
    from 
        mywork.audit_normalized a
    inner join 
        mywork.fdic_data b
    on 
        a.rssd9001_char = b.FED_RSSD_char and
        a.audit_year = b.year;
quit;

/* STEP 2: CALCULATE INITIAL VARIABLES */
proc sql;
    create table mywork.combined_data_calcs as
    select 
        *,
        /* Log transformation of assets */
        log(ASSET) as size,
        
        /* Calculate gross loans */
        (LNLSNET + LNATRES) as loans,
        
        /* Chargeoffs scaled by gross loans */
        case
            when (LNLSNET + LNATRES) > 0 then NTLNLS / (LNLSNET + LNATRES)
            else .
        end as co,
        
        /* Nonperforming Assets scaled by gross loans */
        case
            when (LNLSNET + LNATRES) > 0 then (P9ASSET + NAASSET) / (LNLSNET + LNATRES)
            else .
        end as npa,
        
        /* Commercial Real Estate Loans scaled by total net loans */
        case
            when LNLSNET > 0 then LNRENRES / LNLSNET
            else .
        end as comre,
        
        /* Residential real estate loans scaled by total net loans */
        case
            when LNLSNET > 0 then LNRERES / LNLSNET
            else .
        end as mortgage,
        
        /* C&I loans scaled by total net loans */
        case
            when LNLSNET > 0 then LNCI / LNLSNET
            else .
        end as comind,
        
        /* Consumer loans scaled by total net loans */
        case
            when LNLSNET > 0 then LNCON / LNLSNET
            else .
        end as cons,
        
        /* Capital ratio */
        IDT1RWAJR / 100 as capital,
        
        /* all = lnatres/(lnatres+lnlsnet) */
        case
            when (lnatres + lnlsnet) > 0 then lnatres / (lnatres + lnlsnet)
            else .
        end as all
    from 
        mywork.combined_data;
quit;

/* STEP 3: ADD LAG VARIABLES USING SQL JOINS */
proc sql;
    create table mywork.combined_data_with_lags as
    select 
        a.*,
        b.size as sizem1,
        b.ASSET as ASSETm1,
        b.lnatres as lnatresm1,
        b.lnlsnet as lnlsnetm1,
        b.co as com1,
        b.npa as npam1,
        b.comre as comrem1,
        b.mortgage as mortgagem1,
        b.comind as comindm1,
        b.cons as consm1,
        b.capital as capitalm1,
        b.all as allm1,
        b.loans as loansm1
    from 
        mywork.combined_data_calcs as a
    left join 
        mywork.combined_data_calcs as b
    on 
        a.CERT_char = b.CERT_char and 
        a.year - 1 = b.year;
quit;

/* STEP 4: IMPORT FAILED BANKS DATASET */
proc import datafile="C:/Users/lward/Documents/ECON - Data Science for Economists/ProjectDocs/FDICFailedBank.xlsx"
    out=mywork.fdicfailures
    dbms=xlsx
    replace;
    sheet="FDICFailedBank";
    getnames=yes;
run;

/* Fix the imported failed banks data */
data mywork.fdicfailures_cleaned;
    set mywork.fdicfailures;
    
    /* Extract year from closing date - note the underscore in variable name */
    closing_year = year(Closing_Date_);
    
    /* Create CERT_char with leading zeros (7 digits) */
    if not missing(Cert_) then
        CERT_char = put(Cert_, z7.);
    
    /* Create closem1 and closem2 columns */
    closem1 = closing_year - 1;
    closem2 = closing_year - 2;
    
    /* Keep only needed variables - use actual variable names from import */
    keep Bank_Name_ City_ State_ Cert_ CERT_char Closing_Date_ closing_year Acquiring_Institution_ closem1 closem2;
run;

/* STEP 5: ADD FAILURE INDICATOR TO COMBINED DATASET */
proc sql;
    create table mywork.combined_data_complete as
    select 
        c.*,
        case 
            when f.CERT_char is not null then 1
            else 0
        end as Failurep1
    from 
        mywork.combined_data_with_lags c
    left join 
        mywork.fdicfailures_cleaned f
    on 
        c.CERT_char = f.CERT_char and
        c.year = f.closem1;
quit;

/* STEP 6: CREATE SMALL ASSETS AND LARGE ASSETS DATASETS */
/* Create dataset for ASSET < 500000 (Small Assets) */
data mywork.small_assets;
    set mywork.combined_data_complete;
    where ASSET < 500000;
run;

/* Create dataset for ASSET < 1000000 (Large Assets) */
data mywork.large_assets;
    set mywork.combined_data_complete;
    where ASSET < 1000000;
run;

/* STEP 7: CREATE DATASETS OF FAILED BANKS ONLY */
/* Failed banks in small assets category */
data mywork.failed_banks_sa;
    set mywork.small_assets;
    where Failurep1 = 1;
run;

/* Failed banks in large assets category */
data mywork.failed_banks_la;
    set mywork.large_assets;
    where Failurep1 = 1;
run;

/* STEP 8: VERIFICATION AND ANALYSIS STATISTICS */
/* Verify all variables and lags are working correctly */
proc print data=mywork.combined_data_complete (obs=5);
    var CERT_char year ASSET ASSETm1 size sizem1 co com1 npa npam1 comre comrem1;
    title "Sample of Calculated Variables and Their Lags (Part 1)";
run;

proc print data=mywork.combined_data_complete (obs=5);
    var CERT_char year mortgage mortgagem1 comind comindm1 cons consm1 capital capitalm1 all allm1;
    title "Sample of Calculated Variables and Their Lags (Part 2)";
run;

/* Check distributions of calculated variables */
proc means data=mywork.combined_data_complete n nmiss mean min max;
    var co com1 npa npam1 comre comrem1;
    title "Summary of Calculated Variables and Their Lags (Part 1)";
run;

proc means data=mywork.combined_data_complete n nmiss mean min max;
    var mortgage mortgagem1 comind comindm1 cons consm1 capital capitalm1 size sizem1 all allm1;
    title "Summary of Calculated Variables and Their Lags (Part 2)";
run;

/* Count of observations in each dataset */
proc sql;
    select 'Combined Data' as Dataset, 
           count(*) as Observations
    from mywork.combined_data_complete
    union
    select 'Small Assets (< $500M)' as Dataset, 
           count(*) as Observations
    from mywork.small_assets
    union
    select 'Large Assets (< $1B)' as Dataset,
           count(*) as Observations
    from mywork.large_assets
    union
    select 'Failed Banks (Small Assets)' as Dataset,
           count(*) as Observations
    from mywork.failed_banks_sa
    union
    select 'Failed Banks (Large Assets)' as Dataset,
           count(*) as Observations
    from mywork.failed_banks_la;
quit;

/* Check counts of failures and non-failures in small assets */
proc freq data=mywork.small_assets;
    tables Failurep1 / nocum;
    title "Distribution of Failures in Small Assets Dataset";
run;

/* Check counts of failures and non-failures in large assets */
proc freq data=mywork.large_assets;
    tables Failurep1 / nocum;
    title "Distribution of Failures in Large Assets Dataset";
run;

/* OUTPUT THE DATASETS FOR ANALYSIS IN R*/
/* Export small_assets dataset to CSV format */
proc export data=mywork.small_assets
    outfile="C:\Users\lward\Documents\ECON - Data Science for Economists\ProjectDocs\CleanedData\small_assets.csv"
    dbms=csv
    replace;
run;

/* Export large_assets dataset to CSV format */
proc export data=mywork.large_assets
    outfile="C:\Users\lward\Documents\ECON - Data Science for Economists\ProjectDocs\CleanedData\large_assets.csv"
    dbms=csv
    replace;
run;

/* Confirm export completed */
%put NOTE: Datasets exported to CSV format for R analysis.;
